version: "3.8"
services:
  reverse-proxy:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres-account:
    image: postgres:alpine
    environment:
      - PG_USER=postgres
      - PG_PASSWORD=0000
      - PG_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata_account:/var/lib/postgresql/data
    command: ["postgres", "-c", "log_statement=all"]

  account:
    build:
      context: ./account
      target: builder
    image: account
    env_file: ./account/.env.dev
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`localhost`) && PathPrefix(`/api/account`)"
      - "traefik.http.services.account.loadbalancer.server.port=8080"
    environment:
      - ENV=dev
      - PG_HOST=postgres-account
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASSWORD=0000
      - PG_DB=postgres
      - PG_SSL=disable
    volumes:
      - ./account:/go/src/app
    depends_on:
      - postgres-account
    command: reflex -r "\.go$$" -s -- sh -c "go run ./"

volumes:
  pgdata_account:
